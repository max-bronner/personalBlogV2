{
  "title": "Using GIMP as a Render Engine",
  "path": "/blog/dev_2021-10-28",
  "titleHtml": "Using GIMP as a Render Engine",
  "image": {
    "src": "IMG_20211028_preview_450",
    "srcBig": "IMG_20211028_preview_450",
    "hasDescription": false,
    "height": 300,
    "width": 450,
    "format": "svg"
  },
  "description": "A guide on using GIMP as a render engine for automated image optimization.",
  "date": "October 28, 2021",
  "category": "Dev",
  "content": [
    {
      "component": "components/text/text",
      "content": "As I started adding more images to my blog posts, I realized how much effort still went into optimizing them. Converting images into different formats, generating multiple resolutions, and tweaking settings takes up a lot of time. And to be honest, I’m not using the right tools neither."
    },
    {
      "component": "components/text/text",
      "content": "That’s why I started looking for a way to automate at least part of this process. I explored various frontend solutions and packages that could integrate into my build process, but none of them offered the flexibility I needed and especially wanted."
    },
    {
      "component": "components/text/text",
      "content": "Then I realized I’m already using GIMP for image editing, and it has plenty of export options. So I decided to investigate if I could automate the export process, and here’s the solution I came up with:"
    },
    {
      "component": "components/codeBlock/codeBlock",
      "title": "automated_exports.scm",
      "lines": [
        "(define (batch-export-menu)",
        "  (let* ((image (car (gimp-image-list)))",
        "         (drawable (car (gimp-image-get-active-layer image)))",
        "         (filename (car (gimp-image-get-filename image))))",
        "    (batch-export image drawable filename)))",
        "",
        "(define (batch-export image drawable filename)",
        "  (let* ((basename (substring filename 0 (- (string-length filename) 4))) )",
        "",
        "    ;; Export JPEG",
        "    (file-jpeg-save RUN-NONINTERACTIVE image drawable",
        "      (string-append basename \".jpg\")  ;; Filename for output",
        "      (string-append basename \".jpg\")  ;; Raw filename",
        "      0.8  ;; Quality (0.0 - 1.0, lower means more compression, worse quality)",
        "      0     ;; Smoothing (0 - 1, higher smooths more, but can reduce artifacts)",
        "      TRUE  ;; Optimize Huffman tables (can reduce file size slightly)",
        "      FALSE ;; Progressive JPEG (TRUE enables progressive loading)",
        "      \"\"    ;; Comment",
        "      0     ;; Subsampling",
        "      0     ;; Baseline JPEG (0 = no, 1 = enforce baseline compatibility)",
        "      0     ;; Restart interval (0 = none)",
        "      0)    ;; DCT method (0 = float, 1 = integer, 2 = fast integer)",
        "",
        "    ;; Export PNG",
        "    (file-png-save2 RUN-NONINTERACTIVE image drawable",
        "      (string-append basename \".png\")  ;; Filename for output",
        "      (string-append basename \".png\")  ;; Raw filename",
        "      0  ;; Interlace (0 = none, 1 = Adam7 interlacing)",
        "      9  ;; Compression level (0 = fastest, 9 = smallest file size)",
        "      0  ;; BKGD chunk (0 = no, 1 = save background color)",
        "      0  ;; GAMMA chunk (0 = no, 1 = save gamma value)",
        "      0  ;; ICCP chunk (0 = no, 1 = embed ICC profile)",
        "      0  ;; OFFS chunk (0 = no, 1 = save image offset)",
        "      0  ;; PHYS chunk (0 = no, 1 = save resolution information)",
        "      0  ;; SRGB chunk (0 = no, 1 = save sRGB information)",
        "      TRUE) ;; Save EXIF/XMP metadata",
        "",
        "    ;; Export WebP",
        "    (file-webp-save2 RUN-NONINTERACTIVE image drawable",
        "      (string-append basename \".webp\")  ;; Filename for output",
        "      (string-append basename \".webp\")  ;; Raw filename",
        "      0  ;; Preset (0 = default, 1 = picture, 2 = photo, 3 = drawing, 4 = icon, 5 = text)",
        "      0  ;; Lossless (0 = lossy, 1 = lossless)",
        "      80 ;; Quality (0 - 100, lower means more compression, worse quality)",
        "      0 ;; Alpha Quality (0 - 100, lower means more compression, worse quality)",
        "      0 ;; Animation (use layers for animation)",
        "      0 ;; Loop animation",
        "      0 ;; Minimize animation size",
        "      0 ;; Keyframe distance",
        "      0 ;; Save EXIF data",
        "      0 ;; Save IPTC data",
        "      0 ;; Save XMP data",
        "      0 ;; Not sure what this is for",
        "      0 ;; Not sure what this is for",
        "      0 ;; Not sure what this is for",
        "      0 ;; Not sure what this is for",
        "      0 ;; Default delay",
        "      0) ;; Force Delay",
        "",
        "    ;; Export AVIF",
        "    (file-heif-av1-save RUN-NONINTERACTIVE image drawable",
        "      (string-append basename \".avif\")  ;; Filename for output",
        "      (string-append basename \".avif\")  ;; Raw filename",
        "      80  ;; Quality (0 - 100, lower means more compression, worse quality)",
        "      0)  ;; Lossless (0 = lossy, 1 = lossless)",
        "))",
        "",
        ";; Register the script in GIMP",
        "(script-fu-register",
        " \"batch-export-menu\"",
        " \"Batch Export\"       ;; Menu label",
        " \"Exports the image in multiple formats\"",
        " \"Max Bronner\"",
        " \"Max Bronner\"",
        " \"2021\"",
        " \"\"                   ;; All image types",
        " SF-IMAGE \"Image\" 0",
        " SF-DRAWABLE \"Drawable\" 0)",
        "",
        ";; Add it to the File menu",
        "(script-fu-menu-register \"batch-export-menu\" \"<Image>/File/\")"
      ]
    },
    {
      "component": "components/text/text",
      "content": "You can easily modify the script to include additional export options or adjust settings to fit your needs. Most export options are explained in the comments within the script above."
    },
    {
      "component": "components/text/text",
      "content": "To use the export script, simply place it in your GIMP scripts folder under <code>C:\\Users\\AppData\\Roaming\\GIMP\\2.10\\scripts</code> for Windows and <code>~\\Library\\Application Support\\GIMP\\2.10\\scripts</code> for macOS. Once it’s in place, open GIMP and find the batch export option under <code>File > Batch Export</code>."
    }
  ]
}
